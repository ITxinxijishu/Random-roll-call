2025-06-22 12:02:57 INFO autoreload Watching for file changes with StatReloader
2025-06-22 12:02:57 DEBUG autoreload Waiting for apps ready_event.
2025-06-22 12:02:57 DEBUG autoreload Apps ready_event triggered. Sending autoreload_started signal.
2025-06-22 12:02:57 DEBUG autoreload Watching dir F:\随机点名系统\django点名系统2.0\django点名系统2.0\roll_call\templates with glob **/*.
2025-06-22 12:02:57 DEBUG autoreload Watching dir F:\随机点名系统\django点名系统2.0\django点名系统2.0\roll_call\locale with glob **/*.mo.
2025-06-22 12:02:57 DEBUG autoreload Watching dir F:\随机点名系统\django点名系统2.0\django点名系统2.0\roll_call\call\locale with glob **/*.mo.
2025-06-22 12:02:57 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:04 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:05 DEBUG schema CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL); (params None)
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE TABLE "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL); args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:05 DEBUG schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
2025-07-02 09:53:05 DEBUG utils (0.015) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
2025-07-02 09:53:05 DEBUG schema CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); args=(); alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2025-07-02 01:53:05.762136') RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', '2025-07-02 01:53:05.762136'); alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:05 DEBUG schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL); (params None)
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL); args=None; alias=default
2025-07-02 09:53:05 DEBUG schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE); (params None)
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
2025-07-02 09:53:05 DEBUG schema CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE TABLE "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
2025-07-02 09:53:05 DEBUG schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL); (params None)
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL); args=None; alias=default
2025-07-02 09:53:05 DEBUG schema CREATE TABLE "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE TABLE "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
2025-07-02 09:53:05 DEBUG schema CREATE TABLE "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE TABLE "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:05 DEBUG schema CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); args=(); alias=default
2025-07-02 09:53:05 DEBUG schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=(); alias=default
2025-07-02 09:53:05 DEBUG schema CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id"); args=(); alias=default
2025-07-02 09:53:05 DEBUG schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=(); alias=default
2025-07-02 09:53:05 DEBUG schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=(); alias=default
2025-07-02 09:53:05 DEBUG schema CREATE UNIQUE INDEX "auth_user_groups_user_id_group_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE UNIQUE INDEX "auth_user_groups_user_id_group_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id"); args=(); alias=default
2025-07-02 09:53:05 DEBUG schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=(); alias=default
2025-07-02 09:53:05 DEBUG schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=(); alias=default
2025-07-02 09:53:05 DEBUG schema CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id"); args=(); alias=default
2025-07-02 09:53:05 DEBUG schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=(); alias=default
2025-07-02 09:53:05 DEBUG schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=(); alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2025-07-02 01:53:05.803382') RETURNING "django_migrations"."id"; args=('auth', '0001_initial', '2025-07-02 01:53:05.803382'); alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:05 DEBUG schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:05 DEBUG schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=(); alias=default
2025-07-02 09:53:05 DEBUG schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=(); alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2025-07-02 01:53:05.831039') RETURNING "django_migrations"."id"; args=('admin', '0001_initial', '2025-07-02 01:53:05.831039'); alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:05 DEBUG schema CREATE TABLE "new__django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL); (params None)
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE TABLE "new__django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL); args=None; alias=default
2025-07-02 09:53:05 DEBUG schema INSERT INTO "new__django_admin_log" ("id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time") SELECT "id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time" FROM "django_admin_log"; (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) INSERT INTO "new__django_admin_log" ("id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time") SELECT "id", "object_id", "object_repr", "action_flag", "change_message", "content_type_id", "user_id", "action_time" FROM "django_admin_log"; args=(); alias=default
2025-07-02 09:53:05 DEBUG schema DROP TABLE "django_admin_log"; (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) DROP TABLE "django_admin_log"; args=(); alias=default
2025-07-02 09:53:05 DEBUG schema ALTER TABLE "new__django_admin_log" RENAME TO "django_admin_log"; (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) ALTER TABLE "new__django_admin_log" RENAME TO "django_admin_log"; args=(); alias=default
2025-07-02 09:53:05 DEBUG schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=(); alias=default
2025-07-02 09:53:05 DEBUG schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=(); alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2025-07-02 01:53:05.858680') RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', '2025-07-02 01:53:05.858680'); alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2025-07-02 01:53:05.878778') RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', '2025-07-02 01:53:05.878778'); alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:05 DEBUG schema CREATE TABLE "new__django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, "name" varchar(100) NULL); (params None)
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE TABLE "new__django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL, "name" varchar(100) NULL); args=None; alias=default
2025-07-02 09:53:05 DEBUG schema INSERT INTO "new__django_content_type" ("id", "app_label", "model", "name") SELECT "id", "app_label", "model", "name" FROM "django_content_type"; (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) INSERT INTO "new__django_content_type" ("id", "app_label", "model", "name") SELECT "id", "app_label", "model", "name" FROM "django_content_type"; args=(); alias=default
2025-07-02 09:53:05 DEBUG schema DROP TABLE "django_content_type"; (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) DROP TABLE "django_content_type"; args=(); alias=default
2025-07-02 09:53:05 DEBUG schema ALTER TABLE "new__django_content_type" RENAME TO "django_content_type"; (params ())
2025-07-02 09:53:05 DEBUG utils (0.015) ALTER TABLE "new__django_content_type" RENAME TO "django_content_type"; args=(); alias=default
2025-07-02 09:53:05 DEBUG schema CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model"); args=(); alias=default
2025-07-02 09:53:05 DEBUG schema ALTER TABLE "django_content_type" DROP COLUMN "name"; (params ())
2025-07-02 09:53:05 DEBUG utils (0.000) ALTER TABLE "django_content_type" DROP COLUMN "name"; args=(); alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2025-07-02 01:53:05.962641') RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', '2025-07-02 01:53:05.962641'); alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:05 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE TABLE "new__auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL); (params None)
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE TABLE "new__auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL); args=None; alias=default
2025-07-02 09:53:06 DEBUG schema INSERT INTO "new__auth_permission" ("id", "content_type_id", "codename", "name") SELECT "id", "content_type_id", "codename", "name" FROM "auth_permission"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "new__auth_permission" ("id", "content_type_id", "codename", "name") SELECT "id", "content_type_id", "codename", "name" FROM "auth_permission"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema DROP TABLE "auth_permission"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) DROP TABLE "auth_permission"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema ALTER TABLE "new__auth_permission" RENAME TO "auth_permission"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) ALTER TABLE "new__auth_permission" RENAME TO "auth_permission"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename"); args=(); alias=default
2025-07-02 09:53:06 DEBUG schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=(); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2025-07-02 01:53:06.018085') RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', '2025-07-02 01:53:06.018085'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.016) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "email" varchar(254) NOT NULL); (params None)
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "email" varchar(254) NOT NULL); args=None; alias=default
2025-07-02 09:53:06 DEBUG schema INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "is_staff", "is_active", "date_joined", "email") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "is_staff", "is_active", "date_joined", "email" FROM "auth_user"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "is_staff", "is_active", "date_joined", "email") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "is_staff", "is_active", "date_joined", "email" FROM "auth_user"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema DROP TABLE "auth_user"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) DROP TABLE "auth_user"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema ALTER TABLE "new__auth_user" RENAME TO "auth_user"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.016) ALTER TABLE "new__auth_user" RENAME TO "auth_user"; args=(); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2025-07-02 01:53:06.054260') RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', '2025-07-02 01:53:06.054260'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2025-07-02 01:53:06.089590') RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', '2025-07-02 01:53:06.089590'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_login" datetime NULL); (params None)
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "is_superuser" bool NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_login" datetime NULL); args=None; alias=default
2025-07-02 09:53:06 DEBUG schema INSERT INTO "new__auth_user" ("id", "password", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "last_login") SELECT "id", "password", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "last_login" FROM "auth_user"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "new__auth_user" ("id", "password", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "last_login") SELECT "id", "password", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "last_login" FROM "auth_user"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema DROP TABLE "auth_user"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) DROP TABLE "auth_user"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema ALTER TABLE "new__auth_user" RENAME TO "auth_user"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) ALTER TABLE "new__auth_user" RENAME TO "auth_user"; args=(); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2025-07-02 01:53:06.127929') RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', '2025-07-02 01:53:06.127929'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.015) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2025-07-02 01:53:06.139530') RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', '2025-07-02 01:53:06.139530'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2025-07-02 01:53:06.158963') RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', '2025-07-02 01:53:06.158963'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.015) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "username" varchar(150) NOT NULL UNIQUE); (params None)
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "username" varchar(150) NOT NULL UNIQUE); args=None; alias=default
2025-07-02 09:53:06 DEBUG schema INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "username") SELECT "id", "password", "last_login", "is_superuser", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "username" FROM "auth_user"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "username") SELECT "id", "password", "last_login", "is_superuser", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "username" FROM "auth_user"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema DROP TABLE "auth_user"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) DROP TABLE "auth_user"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema ALTER TABLE "new__auth_user" RENAME TO "auth_user"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) ALTER TABLE "new__auth_user" RENAME TO "auth_user"; args=(); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2025-07-02 01:53:06.185241') RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', '2025-07-02 01:53:06.185241'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_name" varchar(150) NOT NULL); (params None)
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "last_name" varchar(150) NOT NULL); args=None; alias=default
2025-07-02 09:53:06 DEBUG schema INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "first_name", "email", "is_staff", "is_active", "date_joined", "last_name") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "email", "is_staff", "is_active", "date_joined", "last_name" FROM "auth_user"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "first_name", "email", "is_staff", "is_active", "date_joined", "last_name") SELECT "id", "password", "last_login", "is_superuser", "username", "first_name", "email", "is_staff", "is_active", "date_joined", "last_name" FROM "auth_user"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema DROP TABLE "auth_user"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) DROP TABLE "auth_user"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema ALTER TABLE "new__auth_user" RENAME TO "auth_user"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.015) ALTER TABLE "new__auth_user" RENAME TO "auth_user"; args=(); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2025-07-02 01:53:06.209559') RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', '2025-07-02 01:53:06.209559'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE TABLE "new__auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE); (params None)
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE TABLE "new__auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE); args=None; alias=default
2025-07-02 09:53:06 DEBUG schema INSERT INTO "new__auth_group" ("id", "name") SELECT "id", "name" FROM "auth_group"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "new__auth_group" ("id", "name") SELECT "id", "name" FROM "auth_group"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema DROP TABLE "auth_group"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) DROP TABLE "auth_group"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema ALTER TABLE "new__auth_group" RENAME TO "auth_group"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) ALTER TABLE "new__auth_group" RENAME TO "auth_group"; args=(); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2025-07-02 01:53:06.231831') RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', '2025-07-02 01:53:06.231831'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.016) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2025-07-02 01:53:06.257510') RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', '2025-07-02 01:53:06.257510'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "first_name" varchar(150) NOT NULL); (params None)
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE TABLE "new__auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "first_name" varchar(150) NOT NULL); args=None; alias=default
2025-07-02 09:53:06 DEBUG schema INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "last_name", "email", "is_staff", "is_active", "date_joined", "first_name") SELECT "id", "password", "last_login", "is_superuser", "username", "last_name", "email", "is_staff", "is_active", "date_joined", "first_name" FROM "auth_user"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "new__auth_user" ("id", "password", "last_login", "is_superuser", "username", "last_name", "email", "is_staff", "is_active", "date_joined", "first_name") SELECT "id", "password", "last_login", "is_superuser", "username", "last_name", "email", "is_staff", "is_active", "date_joined", "first_name" FROM "auth_user"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema DROP TABLE "auth_user"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) DROP TABLE "auth_user"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema ALTER TABLE "new__auth_user" RENAME TO "auth_user"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) ALTER TABLE "new__auth_user" RENAME TO "auth_user"; args=(); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2025-07-02 01:53:06.281162') RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', '2025-07-02 01:53:06.281162'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.015) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE TABLE "call_attendance" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "student_name" varchar(100) NOT NULL, "class_name" varchar(100) NOT NULL, "timestamp" datetime NOT NULL); (params None)
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE TABLE "call_attendance" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "student_name" varchar(100) NOT NULL, "class_name" varchar(100) NOT NULL, "timestamp" datetime NOT NULL); args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE INDEX "call_attend_student_f11a2c_idx" ON "call_attendance" ("student_name"); (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE INDEX "call_attend_student_f11a2c_idx" ON "call_attendance" ("student_name"); args=(); alias=default
2025-07-02 09:53:06 DEBUG schema CREATE INDEX "call_attend_class_n_c3414a_idx" ON "call_attendance" ("class_name", "student_name"); (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE INDEX "call_attend_class_n_c3414a_idx" ON "call_attendance" ("class_name", "student_name"); args=(); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.016) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('call', '0001_initial', '2025-07-02 01:53:06.299619') RETURNING "django_migrations"."id"; args=('call', '0001_initial', '2025-07-02 01:53:06.299619'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE TABLE "call_class" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL UNIQUE); (params None)
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE TABLE "call_class" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL UNIQUE); args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE TABLE "call_student" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "class_name_id" bigint NOT NULL REFERENCES "call_class" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE TABLE "call_student" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "class_name_id" bigint NOT NULL REFERENCES "call_class" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE INDEX "call_student_class_name_id_fb8dbe76" ON "call_student" ("class_name_id"); (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE INDEX "call_student_class_name_id_fb8dbe76" ON "call_student" ("class_name_id"); args=(); alias=default
2025-07-02 09:53:06 DEBUG utils (0.016) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('call', '0002_class_student', '2025-07-02 01:53:06.322234') RETURNING "django_migrations"."id"; args=('call', '0002_class_student', '2025-07-02 01:53:06.322234'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE TABLE "call_question" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "question_text" text NOT NULL, "answer" text NULL, "created_at" datetime NOT NULL); (params None)
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE TABLE "call_question" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "question_text" text NOT NULL, "answer" text NULL, "created_at" datetime NOT NULL); args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE TABLE "call_callrecord" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL, "classroom_id" bigint NOT NULL REFERENCES "call_class" ("id") DEFERRABLE INITIALLY DEFERRED, "question_id" bigint NOT NULL REFERENCES "call_question" ("id") DEFERRABLE INITIALLY DEFERRED, "student_id" bigint NOT NULL REFERENCES "call_student" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE TABLE "call_callrecord" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "created_at" datetime NOT NULL, "classroom_id" bigint NOT NULL REFERENCES "call_class" ("id") DEFERRABLE INITIALLY DEFERRED, "question_id" bigint NOT NULL REFERENCES "call_question" ("id") DEFERRABLE INITIALLY DEFERRED, "student_id" bigint NOT NULL REFERENCES "call_student" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE INDEX "call_callrecord_classroom_id_677bda54" ON "call_callrecord" ("classroom_id"); (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE INDEX "call_callrecord_classroom_id_677bda54" ON "call_callrecord" ("classroom_id"); args=(); alias=default
2025-07-02 09:53:06 DEBUG schema CREATE INDEX "call_callrecord_question_id_fa65ad7e" ON "call_callrecord" ("question_id"); (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE INDEX "call_callrecord_question_id_fa65ad7e" ON "call_callrecord" ("question_id"); args=(); alias=default
2025-07-02 09:53:06 DEBUG schema CREATE INDEX "call_callrecord_student_id_2d8bfd98" ON "call_callrecord" ("student_id"); (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE INDEX "call_callrecord_student_id_2d8bfd98" ON "call_callrecord" ("student_id"); args=(); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('call', '0003_question_callrecord', '2025-07-02 01:53:06.342743') RETURNING "django_migrations"."id"; args=('call', '0003_question_callrecord', '2025-07-02 01:53:06.342743'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema DROP TABLE "call_callrecord"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) DROP TABLE "call_callrecord"; args=(); alias=default
2025-07-02 09:53:06 DEBUG schema DROP TABLE "call_question"; (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) DROP TABLE "call_question"; args=(); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('call', '0004_delete_callrecord_delete_question', '2025-07-02 01:53:06.349557') RETURNING "django_migrations"."id"; args=('call', '0004_delete_callrecord_delete_question', '2025-07-02 01:53:06.349557'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); (params None)
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL); args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_key_check; args=None; alias=default
2025-07-02 09:53:06 DEBUG schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params ())
2025-07-02 09:53:06 DEBUG utils (0.000) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=(); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2025-07-02 01:53:06.375253') RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', '2025-07-02 01:53:06.375253'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.016) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.015) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'call'; args=('call',); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('call', 'attendance'), ('call', 'class'), ('call', 'student') RETURNING "django_content_type"."id"; args=('call', 'attendance', 'call', 'class', 'call', 'student'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.016) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'call' AND "django_content_type"."model" = 'attendance') LIMIT 21; args=('call', 'attendance'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'call' AND "django_content_type"."model" = 'class') LIMIT 21; args=('call', 'class'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'call' AND "django_content_type"."model" = 'student') LIMIT 21; args=('call', 'student'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 7); alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) BEGIN; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add attendance', 7, 'add_attendance'), ('Can change attendance', 7, 'change_attendance'), ('Can delete attendance', 7, 'delete_attendance'), ('Can view attendance', 7, 'view_attendance'), ('Can add class', 8, 'add_class'), ('Can change class', 8, 'change_class'), ('Can delete class', 8, 'delete_class'), ('Can view class', 8, 'view_class'), ('Can add student', 9, 'add_student'), ('Can change student', 9, 'change_student'), ('Can delete student', 9, 'delete_student'), ('Can view student', 9, 'view_student') RETURNING "auth_permission"."id"; args=('Can add attendance', 7, 'add_attendance', 'Can change attendance', 7, 'change_attendance', 'Can delete attendance', 7, 'delete_attendance', 'Can view attendance', 7, 'view_attendance', 'Can add class', 8, 'add_class', 'Can change class', 8, 'change_class', 'Can delete class', 8, 'delete_class', 'Can view class', 8, 'view_class', 'Can add student', 9, 'add_student', 'Can change student', 9, 'change_student', 'Can delete student', 9, 'delete_student', 'Can view student', 9, 'view_student'); alias=default
2025-07-02 09:53:06 DEBUG utils (0.016) COMMIT; args=None; alias=default
2025-07-02 09:53:06 DEBUG utils (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'call'; args=('call',); alias=default
